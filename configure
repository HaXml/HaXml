#!/bin/sh
#       configure -- prepare to compile/install the HaXml package
#       author:   Malcolm.Wallace@cs.york.ac.uk, August 2002

VERSION="1.06"

# We need a working `echo' command: at least Solaris2.6 may not have it.
case `echo -n hello | wc -c | ( read n ; echo $n )` in
    5) ;;
    *) echo "The builtin 'echo' command doesn't do '-n' - emulating it."
       $CCC -o script/echo script/echo.c
       echo () { $PWD/script/echo "$@"; } ;;
esac

# Process command-line arguments
while [ "$1" != "" ]
do
  case $1 in
    --buildwith=*)  BUILDWITH=`echo "$1" | cut -c13-` ;;
    --buildopts=*)  BUILDOPTS=$BUILDOPTS" "`echo "$1" | cut -c13-` ;;
    --prefix=*)     INSTALLDIR=`echo "$1" | cut -c10-` ;;
    --help|-h)
  echo "`basename $0` options:     [default in brackets]"
  echo "  --buildwith=comp     Build HaXml for the given compiler [detected]"
  echo "  --buildopts=flags    Give extra flags needed by your build compiler [none]"
  echo "  --prefix=rootdir     Use rootdir as base for installation [detected]"
            exit 0 ;;
    --version|-v) echo "HaXml:     $VERSION"
                  exit 0 ;;
    *) echo "`basename $0`: unrecognised option $1"
       echo '    (use --help for option information)'
       exit 1 ;;
  esac
  shift
done

echo "Looking for installed Haskell compilers:"
# Assume that we start out with a blank config.
GHCKNOWN=
NHCKNOWN=

echo -n "  Looking for ghc...   "
if which ghc >/dev/null 2>&1
then
  GHCKNOWN=`which ghc`
  GHCVERSION=`${GHCKNOWN} --version 2>&1 | sed 's/^.*version[ ]*\([0-9.]*\).*/\1/'`
  GHCNUM=`echo $GHCVERSION | tr "v." " " | ( read x y z; echo $x$y; )`
fi
if [ "$GHCKNOWN" = "" ]
then  echo "(not found)"
else  echo "found ${GHCVERSION}"
fi

echo -n "  Looking for nhc98... "
if which nhc98 >/dev/null 2>&1
then
  NHCKNOWN=`which nhc98`
  NHCVERSION=`${NHCKNOWN} --version | head -1 | cut -d' ' -f2`
  NHCNUM=`echo $NHCVERSION | tr "v." "  " | ( read x y z; echo $x$y )`
fi
if [ "$NHCKNOWN" != "" ]
then  echo "found ${NHCVERSION}"
else  echo "(not found)"
fi

echo -n "  Looking for hmake... "
if which hmake >/dev/null 2>&1
then
  HMAKEKNOWN=`which hmake`
  HMAKEVERSION=`${HMAKEKNOWN} --version | head -1 | cut -d' ' -f2`
  HMAKENUM=`echo $HMAKEVERSION | tr "v." "  " | ( read x y z; echo $x$y )`
fi
if [ "$HMAKEKNOWN" != "" ]
then  echo "found ${HMAKEVERSION}"
else  echo "(not found)"
fi

# Prepare to build.
if [ ! -d obj ]
then mkdir obj
fi
if [ -f obj/compilers ]
then rm obj/compilers
fi
if [ "$GHCKNOWN" != "" ]
then
  echo ghc >>obj/compilers
  if [ ! -d obj/ghc ]
  then mkdir obj/ghc
  fi
  cp -a src/Text src/tools src/Makefile obj/ghc
fi
if [ "$NHCKNOWN" != "" ]
then
  echo nhc98 >>obj/compilers
  if [ ! -d obj/nhc98 ]
  then mkdir obj/nhc98
  fi
  cp -a src/Text src/tools src/Makefile obj/nhc98
fi

echo "Ready to build.  Type 'make' then (as root) 'make install'."
exit 0
