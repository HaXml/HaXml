name:		HaXml
version:	1.25.4
license:	LGPL
license-file:	COPYRIGHT
author:		Malcolm Wallace <Malcolm.Wallace@me.com>
maintainer:	author
homepage:	http://projects.haskell.org/HaXml/
category:	Text, XML
synopsis:	Utilities for manipulating XML documents
description:
	Haskell utilities for parsing, filtering, transforming and
	generating XML documents.
build-type:     Simple
cabal-version:  >=1.8
extra-source-files:    LICENCE-GPL, LICENCE-LGPL

flag splitBase
  default: True
flag bytestringInBase
  default: False

library
  exposed-modules:
        Text.XML.HaXml,
        Text.XML.HaXml.ByteStringPP,
        Text.XML.HaXml.Combinators,
        Text.XML.HaXml.DtdToHaskell.Convert,
        Text.XML.HaXml.DtdToHaskell.Instance,
        Text.XML.HaXml.DtdToHaskell.TypeDef,
        Text.XML.HaXml.Escape,
        Text.XML.HaXml.Html.Generate,
        Text.XML.HaXml.Html.Parse,
        Text.XML.HaXml.Html.ParseLazy,
        Text.XML.HaXml.Html.Pretty,
        Text.XML.HaXml.Lex,
        Text.XML.HaXml.Namespaces,
        Text.XML.HaXml.OneOfN,
        Text.XML.HaXml.Parse,
        Text.XML.HaXml.ParseLazy,
        Text.XML.HaXml.Posn,
        Text.XML.HaXml.Pretty,
        Text.XML.HaXml.SAX,
        Text.XML.HaXml.Schema.Parse,
        Text.XML.HaXml.Schema.XSDTypeModel,
        Text.XML.HaXml.Schema.HaskellTypeModel,
        Text.XML.HaXml.Schema.NameConversion,
        Text.XML.HaXml.Schema.TypeConversion,
        Text.XML.HaXml.Schema.PrettyHaskell,
        Text.XML.HaXml.Schema.PrettyHsBoot,
        Text.XML.HaXml.Schema.PrimitiveTypes,
        Text.XML.HaXml.Schema.Environment,
        Text.XML.HaXml.ShowXmlLazy,
        Text.XML.HaXml.Types,
        Text.XML.HaXml.TypeMapping,
        Text.XML.HaXml.Util,
        Text.XML.HaXml.Validate,
        Text.XML.HaXml.Verbatim,
        Text.XML.HaXml.Version
        Text.XML.HaXml.Wrappers,
        Text.XML.HaXml.XmlContent,
        Text.XML.HaXml.XmlContent.Parser,
        Text.XML.HaXml.XmlContent.Haskell,
        Text.XML.HaXml.Xtract.Combinators,
        Text.XML.HaXml.Xtract.Lex,
        Text.XML.HaXml.Xtract.Parse
  if impl(ghc)
    exposed-modules:
        Text.XML.HaXml.Schema.Schema
  hs-source-dirs: src
  build-depends: polyparse >= 1.10, filepath
  if flag(splitBase)
    build-depends: base >= 3 && < 6, pretty, random, containers
  else
    build-depends: base < 3
  if flag(bytestringInBase)
    build-depends: base >= 2 && < 3
  else
    build-depends: base < 2 || >= 3, bytestring
  extensions: CPP, ExistentialQuantification
  nhc98-options: -K10M

Executable Canonicalise
  GHC-Options: -Wall
  Extensions:  CPP
  Hs-Source-Dirs: src/tools
  Main-Is: Canonicalise.hs
  build-depends: base, HaXml, pretty

Executable CanonicaliseLazy
  GHC-Options: -Wall
  Extensions:  CPP
  Hs-Source-Dirs: src/tools
  Main-Is: CanonicaliseLazy.hs
  build-depends: base, HaXml, pretty

Executable Xtract
  GHC-Options: -Wall
  Extensions:  CPP
  Hs-Source-Dirs: src/tools
  Main-Is: Xtract.hs
  build-depends: base, HaXml, pretty

Executable Validate
  GHC-Options: -Wall
  Extensions:  CPP
  Hs-Source-Dirs: src/tools
  Main-Is: Validate.hs
  build-depends: base, HaXml

Executable MkOneOf
  GHC-Options: -Wall
  Extensions:  CPP
  Hs-Source-Dirs: src/tools
  Main-Is: MkOneOf.hs
  build-depends: base, HaXml

Executable DtdToHaskell
  GHC-Options: -Wall
  Extensions:  CPP
  Hs-Source-Dirs: src/tools
  Main-Is: DtdToHaskell.hs
  build-depends: base, HaXml, pretty

Executable XsdToHaskell
  GHC-Options: -Wall
  Extensions:  CPP
  Hs-Source-Dirs: src/tools
  Main-Is: XsdToHaskell.hs
  build-depends: base, HaXml, pretty, polyparse, directory

Executable FpMLToHaskell
  GHC-Options: -Wall
  Extensions:  CPP
  Hs-Source-Dirs: src/tools
  Main-Is: FpMLToHaskell.hs
  build-depends: base, HaXml, pretty, polyparse, directory
